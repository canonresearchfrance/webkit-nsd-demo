 group { name: "elm/scroller/base/ewebkit";

    alias: "elm/list/base/ewebkit";
    alias: "elm/carousel/base/ewebkit";
    alias: "elm/gengrid/base/ewebkit";

    images {
       image: "scrollbar-knob.png" COMP;
       image: "scrollbar-bg.png" COMP;
    }
    script {
       public sbvis_v, sbvis_h, sbalways_v, sbalways_h;
    }
    parts {
       part { name: "bg";
          type: RECT;
          description { state: "default" 0.0;
             rel1.offset: 1 1;
             rel2.offset: -2 -2;
             color: 0 0 0 255;
          }
       }
       part { name: "clipper";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
             rel1.to: "bg";
             rel2.to: "bg";
          }
       }
       part { name: "elm.swallow.content";
          clip_to: "clipper";
          type: SWALLOW;
          description { state: "default" 0.0;
             rel1.offset: 1 1;
             rel2.offset: -2 -2;
          }
       }
       part { name: "conf_over";
          mouse_events:  0;
          description { state: "default" 0.0;
             rel1.offset: 0 0;
             rel2.offset: -1 -1;
          }
       }
       part { name: "sb_vbar_clip_master";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
          }
          description { state: "hidden" 0.0;
             visible: 0;
             color: 255 255 255 0;
          }
       }
       part { name: "sb_vbar_clip";
          clip_to: "sb_vbar_clip_master";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
          }
          description { state: "hidden" 0.0;
             visible: 0;
             color: 255 255 255 0;
          }
       }
       part { name: "sb_vbar";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
             fixed: 1 1;
             visible: 0;
             min: 2 32;
             align: 1.0 0.0;
             rel1 {
                relative: 1.0 0.0;
                offset:   -8 25;
             }
             rel2 {
                relative: 1.0 0.0;
                offset:   -7 -7;
                to_y:     "sb_hbar";
             }
          }
       }
       part { name: "sb_vbar_runner";
          clip_to: "sb_vbar_clip";
          mouse_events: 0;
          description { state: "default" 0.0;
             min: 3 3;
             max: 3 99999;
             rel1.to:       "sb_vbar";
             rel2.to:       "sb_vbar";
             fixed: 1 1;
          }
       }
       part { name: "vknob-bg";
          type: IMAGE;
          mouse_events: 0;
          clip_to: sb_vbar_clip;
          description { state: "default" 0.0;
            image.normal: "scrollbar-bg.png";
            image.border: 1 1 3 2;
            max: 3 99999;
            rel1 {
            	relative: 1.0 0.0;
            	offset: -10 25;
            }
            rel2 {
            	relative: 1.0 1.0;
            	offset: -6 -25;
            }
          }
       }
       part { name: "elm.dragable.vbar";
          clip_to: "sb_vbar_clip";
          mouse_events: 0;
          dragable {
             x: 0 0 0;
             y: 1 1 0;
             confine: "sb_vbar";
          }
          description { state: "default" 0.0;
             fixed: 1 1;
             min: 2 12;
             rel1 {
                relative: 1.0  0.5;
                offset:   -3    0;
                to: "sb_vbar";
             }
             rel2 {
                relative: 1.0  0.5;
                offset:   -1    0;
                to: "sb_vbar";
             }
             image {
                normal: "scrollbar-knob.png";
             }
          }
       }
       part { name: "sb_hbar_clip_master";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
          }
          description { state: "hidden" 0.0;
             visible: 0;
             color: 255 255 255 0;
          }
       }
       part { name: "sb_hbar_clip";
          clip_to: "sb_hbar_clip_master";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
          }
          description { state: "hidden" 0.0;
             visible: 0;
             color: 255 255 255 0;
          }
       }
       part { name: "sb_hbar";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
             fixed: 1 1;
             visible: 0;
             min: 17 17;
             align: 0.0 1.0;
             rel1 {
                relative: 0.0 1.0;
                offset:   0 -2;
             }
             rel2 {
                relative: 0.0 1.0;
                offset:   -1 -2;
                to_x:     "sb_vbar";
             }
          }
       }
       part { name: "sb_hbar_runner";
          clip_to: "sb_hbar_clip";
          mouse_events: 0;
          description { state: "default" 0.0;
             min: 3 3;
             max: 99999 3;
             rel1.to:       "sb_hbar";
             rel2.to:       "sb_hbar";
          }
       }
       part { name: "elm.dragable.hbar";
          clip_to: "sb_hbar_clip";
          mouse_events: 0;
          dragable {
             x: 1 1 0;
             y: 0 0 0;
             confine: "sb_hbar";
          }
          description { state: "default" 0.0;
             fixed: 1 1;
             min: 17 17;
             rel1 {
                relative: 0.5  0.5;
                offset:   0    0;
                to: "sb_hbar";
             }
             rel2 {
                relative: 0.5  0.5;
                offset:   0    0;
                to: "sb_hbar";
             }
          }
       }
       part { name: "sb_hbar_over1";
          clip_to: "sb_hbar_clip";
          mouse_events: 0;
          description { state: "default" 0.0;
             rel1.to: "elm.dragable.hbar";
             rel2.relative: 1.0 0.5;
             rel2.to: "elm.dragable.hbar";
          }
       }
       part { name: "sb_hbar_over2";
          clip_to: "sb_hbar_clip";
          mouse_events: 0;
          description { state: "default" 0.0;
             rel1.to: "elm.dragable.hbar";
             rel2.to: "elm.dragable.hbar";
          }
       }
    }
    programs {
       program { name: "load";
          signal: "load";
          source: "";
          script {
             set_state(PART:"sb_hbar_clip", "hidden", 0.0);
             set_state(PART:"sb_vbar_clip", "hidden", 0.0);
             set_int(sbvis_h, 0);
             set_int(sbalways_v, 0);
             set_int(sbalways_h, 0);

             emit("do-show-vbar", "");
             set_int(sbvis_v, 1);
          }
       }

       program { name: "vbar_show";
          signal: "elm,action,show,vbar";
          source: "elm";
          action:  STATE_SET "default" 0.0;
          target: "sb_vbar_clip_master";
       }
       program { name: "vbar_hide";
          signal: "elm,action,hide,vbar";
          source: "elm";
          action:  STATE_SET "hidden" 0.0;
          target: "sb_vbar_clip_master";
       }
       program { name: "vbar_show_always";
          signal: "elm,action,show_always,vbar";
          source: "elm";
          script {
             new v;
             v = get_int(sbvis_v);
             v |= get_int(sbalways_v);
             if (!v) {
                set_int(sbalways_v, 1);
                emit("do-show-vbar", "");
                set_int(sbvis_v, 1);
             }
          }
       }
       program { name: "vbar_show_notalways";
          signal: "elm,action,show_notalways,vbar";
          source: "elm";
          script {
             new v;
             v = get_int(sbalways_v);
             if (v) {
                set_int(sbalways_v, 0);
                v = get_int(sbvis_v);
                if (!v) {
                   emit("do-hide-vbar", "");
                   set_int(sbvis_v, 0);
                }
             }
          }
       }
       program { name: "sb_vbar_show";
          signal: "do-show-vbar";
          source: "";
          action:  STATE_SET "default" 0.0;
          transition: LINEAR 1.0;
          target: "sb_vbar_clip";
       }
       program { name: "sb_vbar_hide";
          signal: "do-hide-vbar";
          source: "";
          action:  STATE_SET "hidden" 0.0;
          transition: LINEAR 1.0;
          target: "sb_vbar_clip";
       }

       program { name: "hbar_show";
          signal: "elm,action,show,hbar";
          source: "elm";
          action:  STATE_SET "default" 0.0;
          target: "sb_hbar_clip_master";
       }
       program { name: "hbar_hide";
          signal: "elm,action,hide,hbar";
          source: "elm";
          action:  STATE_SET "hidden" 0.0;
          target: "sb_hbar_clip_master";
       }
       program { name: "hbar_show_always";
          signal: "elm,action,show_always,hbar";
          source: "elm";
          script {
             new v;
             v = get_int(sbvis_h);
             v |= get_int(sbalways_h);
             if (!v) {
                set_int(sbalways_h, 1);
                emit("do-show-hbar", "");
                set_int(sbvis_h, 1);
             }
          }
       }
       program { name: "hbar_show_notalways";
          signal: "elm,action,show_notalways,hbar";
          source: "elm";
          script {
             new v;
             v = get_int(sbalways_h);
             if (v) {
                set_int(sbalways_h, 0);
                v = get_int(sbvis_h);
                if (!v) {
                   emit("do-hide-hbar", "");
                   set_int(sbvis_h, 0);
                }
             }
          }
       }
       program { name: "sb_hbar_show";
          signal: "do-show-hbar";
          source: "";
          action:  STATE_SET "default" 0.0;
          transition: LINEAR 1.0;
          target: "sb_hbar_clip";
       }
       program { name: "sb_hbar_hide";
          signal: "do-hide-hbar";
          source: "";
          action:  STATE_SET "hidden" 0.0;
          transition: LINEAR 1.0;
          target: "sb_hbar_clip";
       }
    }
 }
 group { name: "elm/scroller/entry/ewebkit/url";
    parts {
       part { name: "bg";
          type: RECT;
          description { state: "default" 0.0;
             rel1.offset: 1 1;
             rel2.offset: -2 -2;
             color: 255 255 255 0;
          }
       }
       part { name: "clipper";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
             rel1.to: "bg";
             rel2.to: "bg";
          }
       }
       part { name: "elm.swallow.icon";
          type: SWALLOW;
          clip_to: "clipper";
          description { state: "default" 0.0;
             fixed: 1 1;
             rel1 {
                to: "bg";
                relative: 0.0 0.0;
                offset: 0 0;
             }
             rel2 {
                to: "bg";
                relative: 0.0 1.0;
                offset: 30 -1;
             }
             visible: 0;
          }
          description { state: "visible" 0.0;
             inherit: "default" 0.0;
             visible: 1;
             align: 0.0 0.5;
             min: 20 20;
             max: 20 20;
          }
       }
       part { name: "elm.swallow.end";
          type: SWALLOW;
          clip_to: "clipper";
          description { state: "default" 0.0;
             fixed: 1 1;
             rel1 {
                to: "bg";
                relative: 1.0 0.0;
                offset: -38 0;
             }
             rel2 {
                to: "bg";
                relative: 1.0 1.0;
                offset: -1 -1;
             }
             visible: 0;
          }
          description { state: "visible" 0.0;
             fixed: 1 1;
             align: 1.0 1.0;
             rel1 {
                to: "bg";
                relative: 1.0 0.0;
                offset: -38 0;
             }
             rel2 {
                to: "bg";
                relative: 1.0 1.0;
                offset: -1 -1;
             }
             visible: 1;
          }
       }
       part { name: "elm.swallow.content";
          clip_to: "clipper";
          type: SWALLOW;
          description { state: "default" 0.0;
               rel1 {
                to_x: "elm.swallow.icon";
                relative: 1.0 0.0;
                offset: 4 4;
               }
               rel2 {
                to_x: "elm.swallow.end";
                relative: 0.0 1.0;
                offset: -20 -5;
               }

          }
       }
       part { name: "elm.dragable.vbar";
          description { state: "default" 0.0; visible: 0; }
       }
       part { name: "elm.dragable.hbar";
          description { state: "default" 0.0; visible: 0; }
       }
    }
    programs{
	 program { name: "icon_show";
	    signal: "elm,action,show,icon";
	    source: "elm";
	    action: STATE_SET "visible" 0.0;
	    target: "elm.swallow.icon";
	 }
	 program { name: "icon_hide";
	    signal: "elm,action,hide,icon";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "elm.swallow.icon";
	 }
	 program { name: "end_show";
	    signal: "elm,action,show,end";
	    source: "elm";
	    action: STATE_SET "visible" 0.0;
	    target: "elm.swallow.end";
	 }
	 program { name: "end_hide";
	    signal: "elm,action,hide,end";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "elm.swallow.end";
	 }
    }
 }
   group { name: "elm/genlist/base/ewebkit";

      script {
         public sbvis_v, sbvis_h, sbalways_v, sbalways_h, sbvis_timer;
         public timer0(val) {
            new v;
            v = get_int(sbvis_v);
            if (v) {
               v = get_int(sbalways_v);
               if (!v) {
                  emit("do-hide-vbar", "");
                  set_int(sbvis_v, 0);
               }
            }
            v = get_int(sbvis_h);
            if (v) {
               v = get_int(sbalways_h);
               if (!v) {
                  emit("do-hide-hbar", "");
                  set_int(sbvis_h, 0);
               }
            }
            set_int(sbvis_timer, 0);
            return 0;
         }
      }
      images {
         image: "scrollbar-knob.png" COMP;
         image: "scrollbar-bg.png" COMP;
      }
      parts {
         part { name: "bg";
            type: RECT;
            description { state: "default" 0.0;
               rel1.offset: 1 1;
               rel2.offset: -2 -2;
               color: 0 0 0 255;
            }
         }
         part { name: "clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
            }
         }
         part { name: "elm.swallow.content";
            clip_to: "clipper";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.offset: 1 1;
               rel2.offset: -2 -2;
            }
         }
         part { name: "sb_vbar_clip_master";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part { name: "sb_vbar_clip";
            clip_to: "sb_vbar_clip_master";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part { name: "sb_vbar";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               //fixed: 1 1;
               visible: 0;
               min: 2 32;
               align: 1.0 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  offset:   -8 25;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset:   -7 -7;
                  to_y:     "sb_hbar";
               }
            }
         }
         part { name: "sb_vbar_runner";
            clip_to: "sb_vbar_clip";
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 3 3;
               max: 3 99999;
               rel1.to:       "sb_vbar";
               rel2.to:       "sb_vbar";
               fixed: 1 1;
            }
         }
       part { name: "vknob-bg";
          type: IMAGE;
          mouse_events: 0;
          clip_to: sb_vbar_clip;
          description { state: "default" 0.0;
            image.normal: "scrollbar-bg.png";
            image.border: 1 1 3 2;
            max: 3 99999;
            rel1 {
            	relative: 1.0 0.0;
            	offset: -10 25;
            }
            rel2 {
            	relative: 1.0 1.0;
            	offset: -6 -25;
            }
          }
       }
         part { name: "elm.dragable.vbar";
            clip_to: "sb_vbar_clip";
            mouse_events: 0;
            dragable {
               x: 0 0 0;
               y: 1 1 0;
               confine: "sb_vbar";
            }
            description { state: "default" 0.0;
             fixed: 1 1;
             min: 2 12;
             rel1 {
                relative: 1.0  0.5;
                offset:   -3    0;
                to: "sb_vbar";
             }
             rel2 {
                relative: 1.0  0.5;
                offset:   -1    0;
                to: "sb_vbar";
             }
             image {
                normal: "scrollbar-knob.png";
             }
            }
         }
         part { name: "sb_hbar_clip_master";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part { name: "sb_hbar_clip";
            clip_to: "sb_hbar_clip_master";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part { name: "sb_hbar";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               min: 17 17;
               align: 0.0 1.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset:   0 -2;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset:   -1 -2;
                  to_x:     "sb_vbar";
               }
            }
         }
         part { name: "sb_hbar_runner";
            clip_to: "sb_hbar_clip";
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 3 3;
               max: 99999 3;
               rel1.to:       "sb_hbar";
               rel2.to:       "sb_hbar";
            }
         }
         part { name: "elm.dragable.hbar";
            clip_to: "sb_hbar_clip";
            mouse_events: 0;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "sb_hbar";
            }
            description { state: "default" 0.0;
             fixed: 1 1;
             min: 17 17;
             rel1 {
                relative: 0.5  0.5;
                offset:   0    0;
                to: "sb_hbar";
             }
             rel2 {
                relative: 0.5  0.5;
                offset:   0    0;
                to: "sb_hbar";
             }
            }
         }
       part { name: "sb_hbar_over1";
          clip_to: "sb_hbar_clip";
          mouse_events: 0;
          description { state: "default" 0.0;
             rel1.to: "elm.dragable.hbar";
             rel2.relative: 1.0 0.5;
             rel2.to: "elm.dragable.hbar";
          }
       }
       part { name: "sb_hbar_over2";
          clip_to: "sb_hbar_clip";
          mouse_events: 0;
          description { state: "default" 0.0;
             rel1.to: "elm.dragable.hbar";
             rel2.to: "elm.dragable.hbar";
          }
       }
      }
      programs {
         program { name: "load";
            signal: "load";
            source: "";
            script {
               set_state(PART:"sb_hbar_clip", "hidden", 0.0);
               set_state(PART:"sb_vbar_clip", "hidden", 0.0);
               set_int(sbvis_h, 0);
               set_int(sbvis_v, 0);
               set_int(sbalways_v, 0);
               set_int(sbalways_h, 0);
               set_int(sbvis_timer, 0);
            }
         }

         program { name: "vbar_show";
            signal: "elm,action,show,vbar";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "sb_vbar_clip_master";
         }
         program { name: "vbar_hide";
            signal: "elm,action,hide,vbar";
            source: "elm";
            action:  STATE_SET "hidden" 0.0;
            target: "sb_vbar_clip_master";
         }
         program { name: "vbar_show_always";
            signal: "elm,action,show_always,vbar";
            source: "elm";
            script {
               new v;
               v = get_int(sbvis_v);
               v |= get_int(sbalways_v);
               if (!v) {
                  set_int(sbalways_v, 1);
                  emit("do-show-vbar", "");
                  set_int(sbvis_v, 1);
               }
            }
         }
         program { name: "vbar_show_notalways";
            signal: "elm,action,show_notalways,vbar";
            source: "elm";
            script {
               new v;
               v = get_int(sbalways_v);
               if (v) {
                  set_int(sbalways_v, 0);
                  v = get_int(sbvis_v);
                  if (!v) {
                     emit("do-hide-vbar", "");
                     set_int(sbvis_v, 0);
                  }
               }
            }
         }
         program { name: "sb_vbar_show";
            signal: "do-show-vbar";
            source: "";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 1.0;
            target: "sb_vbar_clip";
         }
         program { name: "sb_vbar_hide";
            signal: "do-hide-vbar";
            source: "";
            action:  STATE_SET "hidden" 0.0;
            transition: LINEAR 1.0;
            target: "sb_vbar_clip";
         }

         program { name: "hbar_show";
            signal: "elm,action,show,hbar";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "sb_hbar_clip_master";
         }
         program { name: "hbar_hide";
            signal: "elm,action,hide,hbar";
            source: "elm";
            action:  STATE_SET "hidden" 0.0;
            target: "sb_hbar_clip_master";
         }
         program { name: "hbar_show_always";
            signal: "elm,action,show_always,hbar";
            source: "elm";
            script {
               new v;
               v = get_int(sbvis_h);
               v |= get_int(sbalways_h);
               if (!v) {
                  set_int(sbalways_h, 1);
                  emit("do-show-hbar", "");
                  set_int(sbvis_h, 1);
               }
            }
         }
         program { name: "hbar_show_notalways";
            signal: "elm,action,show_notalways,hbar";
            source: "elm";
            script {
               new v;
               v = get_int(sbalways_h);
               if (v) {
                  set_int(sbalways_h, 0);
                  v = get_int(sbvis_h);
                  if (!v) {
                     emit("do-hide-hbar", "");
                     set_int(sbvis_h, 0);
                  }
               }
            }
         }
         program { name: "sb_hbar_show";
            signal: "do-show-hbar";
            source: "";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 1.0;
            target: "sb_hbar_clip";
         }
         program { name: "sb_hbar_hide";
            signal: "do-hide-hbar";
            source: "";
            action:  STATE_SET "hidden" 0.0;
            transition: LINEAR 1.0;
            target: "sb_hbar_clip";
         }

         program { name: "scroll";
            signal: "elm,action,scroll";
            source: "elm";
            script {
               new v;
               v = get_int(sbvis_v);
               v |= get_int(sbalways_v);
               if (!v) {
                  emit("do-show-vbar", "");
                  set_int(sbvis_v, 1);
               }
               v = get_int(sbvis_h);
               v |= get_int(sbalways_h);
               if (!v) {
                  emit("do-show-hbar", "");
                  set_int(sbvis_h, 1);
               }
               v = get_int(sbvis_timer);
               if (v > 0) cancel_timer(v);
               v = timer(2.0, "timer0", 0);
               set_int(sbvis_timer, v);
            }
         }
      }
   }
